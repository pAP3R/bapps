GWT Enumerator / Parser

This is a bapp for assisting testing of GWT RPC requests. It combines aspects of the GWT Penetration Testing Toolset into burp, allowing for more effective GWT-RPC request editing via repeater. The extension will allow for automatic insertion point identification and enumeration of available GWT-RPC requests. 

Take the following GWT-RPC request:

	5|0|7|http://localhost:8080/testproject/|29F4EA1240F157649C12466F01F46F60|com.test.client.GreetingService|greetServer|java.lang.String|myInput1|myInput2|1|2|3|4|2|5|5|6|7|

Deserialized:

	Serialized Object:
	5|0|7|http://localhost:8080/testproject/|29F4EA1240F157649C12466F01F46F60|com.test.client.GreetingService|greetServer|java.lang.String|myInput1|myInput2|1|2|3|4|2|5|5|6|7|
	
	Stream Version:	5
	         Flags:	0
	Column Numbers:	7
	          Host:	http://localhost:8080/testproject/
	          Hash:	29F4EA1240F157649C12466F01F46F60
	    Class Name:	com.test.client.GreetingService
	        Method:	greetServer
	   # of Params:	2
	
	    Parameters:
	{'flag': False,
	 'is_array': False,
	 'is_custom_obj': False,
	 'is_list': False,
	 'typename': 'java.lang.String',
	 'values': ['myInput1']}
	{'flag': False,
	 'is_array': False,
	 'is_custom_obj': False,
	 'is_list': False,
	 'typename': 'java.lang.String',
	 'values': ['myInput2']}


Current Features:

- Custom HTTP message tab 
- GWT-RPC deserialized payload in extension output
- Full tab
	+ Message parser
	+ Insertion point auto-do-er

Features Planned:

- Split custom tab to GWT up top, bottom half deserialized
- DONE - Identify fuzz points (set_fuzzable)
- WIP - Add full tab for enum (like wsdler)
- Context menu options (Send selected text / request, etc)
- Error handling
	Parse failures, etc
- GWT-RPC detection



GWT Toolset:
	https://github.com/GDSSecurity/GWT-Penetration-Testing-Toolset/blob/master/gwtparse/gwtparse.py

